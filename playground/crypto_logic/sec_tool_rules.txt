SSLContext.getInstance:"SSL":<button onclick=f("sol1")>Stronger SSL Context</button>
Cipher.getInstance:“AES”,“AES/ECB/NoPadding”,“AES/ECB/PKCS5Padding”,“AES/CBC/PKCS5Padding”:<button onclick=f("sol2")>Use GCM</button>
MessageDigest.getInstance:“MD5”,“SHA1",“SHA-1”:<button onclick=f("sol3")>Using Bouncy Castle</button>
implements:HostNameVerifier, TrustManager:<button onclick=f("sol4")>Use TrustManager based on KeyStore</button>
Random: Random,java.util.Random:<button onclick=f("sol5")>Using Secure Random Number Generator</button>
"DES":"DES","DES/ECB/PKCS5Padding":<button onclick=f("sol6")>Using Stronger Cipher</button>
Socket:new Socket(:<button onclick=f("sol7")>Using SSL Socket</button>
ServerSocket:new ServerSocket(:<button onclick=f("sol8")>Using SSL Server Socket</button>
RSA:"RSA/NONE/NoPadding":<button onclick=f("sol9")>Using RSA with Padding</button>
"Blowfish":.init(64):<button onclick=f("sol10")>Using at least 128 bit Entropy</button>
KeyPairGenerator.getInstance("RSA"):.initialize(512):<button onclick=f("sol11")>Using at least 2048 bit Key</button>
:MD5,SHA1,SHA-1,“MD5”,“SHA1",“SHA-1”:<button onclick=f("sol3")>Using Bouncy Castle</button>